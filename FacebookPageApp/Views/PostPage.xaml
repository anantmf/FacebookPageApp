<Page xmlns:my="using:Telerik.UI.Xaml.Controls.Input" 
    x:Class="FacebookPageApp.Views.PostPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fb="using:FacebookPageApp.FBWrapper"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:FacebookPageApp.Views"
      xmlns:helpers="using:FacebookPageApp.Helpers"
    DataContext="{Binding PostViewModel, Source={StaticResource Locator}}"
    mc:Ignorable="d">
    <Page.Resources>
        <local:PublishedValueConverter x:Key="PublishedConverter" />
        <local:PublishedColorConverter x:Key="PublishedColorConverter" />
        <local:ZeroLengthVisibilityConverter x:Key="ZeroLengthVisibilityConverter"/>
        <local:PhotoVisibiliyConverter x:Key="PhotoVisibiliyConverter" />
        <local:PhotoConverter x:Key="PhotoConverter"/>
        <DataTemplate x:Key="PostItemTemplate" x:DataType="fb:FBPagePost">
            <!--<Grid IsTapEnabled="True" Tapped="Grid_Tapped" DoubleTapped="Grid_DoubleTapped" IsDoubleTapEnabled="True">-->
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="25"/>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition Width="25"/>
                </Grid.ColumnDefinitions>
                <!--<Image Source="{x:Bind Is_published, Converter={StaticResource PublishedConverter}}" Margin="5"/>-->
                <TextBlock Text="{x:Bind Is_published, Mode=OneWay, Converter={StaticResource PublishedConverter}}"  Margin="5"
                           Foreground="{x:Bind Is_published, Mode=OneWay, Converter={StaticResource PublishedColorConverter}}" />
                <StackPanel Grid.Column="1" Orientation="Vertical" Margin="5">
                    <!--<TextBlock Text="{x:Bind Type, Mode=OneWay}" />-->
                    <TextBlock Text="{x:Bind ScheduledPublishDateTimeFormatted, Mode=OneWay}" Visibility="{x:Bind ScheduledPublishDateTimeFormatted, Converter={StaticResource ZeroLengthVisibilityConverter}}" 
                               Foreground="Green"/>

                    <TextBlock  Grid.Column="1" x:Name="Text" Text="{x:Bind Message, Mode=OneWay}" TextWrapping="WrapWholeWords" VerticalAlignment="Top" HorizontalAlignment="Left"
                            Margin="0, 5, 0, 0"/>
                    <Image Visibility="{x:Bind ImageSrc, Converter={StaticResource ZeroLengthVisibilityConverter}, Mode=OneWay}" HorizontalAlignment="Left" VerticalAlignment="Top"
                           Height="200" Width="200">
                        <Image.Source>
                            <BitmapImage UriSource="{x:Bind ImageSrc, Mode=OneWay}" />
                        </Image.Source>
                    </Image>
                </StackPanel>
                <TextBlock Grid.Column="2" Text="{x:Bind LifetimeImpressions, Mode=OneWay}" VerticalAlignment="Top" HorizontalAlignment="Right"/>
                <TextBlock Grid.Column="3" Text="{x:Bind LifetimeUniqueUsers, Mode=OneWay}" VerticalAlignment="Top" HorizontalAlignment="Right"/>
                <StackPanel Grid.Column="5" Orientation="Horizontal" >
                    <Button Content="Delete" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0, 0, 5, 0">
                        <Button.Flyout>
                            <Flyout Placement="Bottom">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Button Content="Confirm"  Margin="15" Command="{x:Bind Path=DeletePostCommand}" CommandParameter="{Binding ElementName=ContentArea, Path=DataContext}"/>
                                </Grid>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                    <Button Content="Edit" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="EditButton" Command="{x:Bind FlyoutOpening}">
                        <Button.Flyout>
                            <Flyout Placement="Full" helpers:FlyoutHelpers.IsOpen="{Binding IsFlyoutOpen, Mode=TwoWay}"
                                                    helpers:FlyoutHelpers.Parent="{Binding ElementName=EditButton}" >
                                <Flyout.FlyoutPresenterStyle>
                                    <Style TargetType="FlyoutPresenter">
                                        <Setter Property="ScrollViewer.ZoomMode" Value="Enabled"/>
                                        <Setter Property="BorderThickness" Value="5"/>
                                        <Setter Property="MinHeight" Value="300"/>
                                        <Setter Property="MinWidth" Value="500"/>
                                        <Setter Property="Height" Value="300"/>
                                        <Setter Property="Width" Value="500"/>
                                        <Setter Property="MaxHeight" Value="300"/>
                                        <Setter Property="MaxWidth" Value="500"/>
                                    </Style>
                                </Flyout.FlyoutPresenterStyle>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Row="0" Text="{x:Bind EditedMessage, Mode=TwoWay}" TextWrapping="Wrap" AcceptsReturn="True"/>
                                    <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="15">
                                        <Button Content="Confirm"  Margin="0, 0, 5, 0" Command="{x:Bind Path=EditPostCommand}" CommandParameter="{Binding ElementName=ContentArea, Path=DataContext}"/>
                                        <Button Content="Cancel"   Command="{x:Bind Path=CancelEditCommand}" CommandParameter="{Binding ElementName=ContentArea, Path=DataContext}"/>
                                    </StackPanel>
                                </Grid>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </StackPanel>

            </Grid>
            <!--<FlyoutBase.AttachedFlyout>
                    <Flyout>
                        <StackPanel>
                            <TextBlock Text="This is fly"> This is fly out</TextBlock>
                        </StackPanel>
                    </Flyout>
                </FlyoutBase.AttachedFlyout>
            </Grid>-->
        </DataTemplate>
    </Page.Resources>
    <Grid
        x:Name="ContentArea"
        Margin="{StaticResource MediumLeftRightMargin}">

        <Grid.RowDefinitions>
            <RowDefinition x:Name="TitleRow" Height="48"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <TextBlock
            x:Name="TitlePage"
            Text="{Binding Page.Name, Mode=TwoWay}"
            Style="{StaticResource PageTitleStyle}" />

        <Grid x:Name="DataContent"
            Grid.Row="1" 
            Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="0"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBox Grid.Row="0" Text="{Binding Page.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5" Visibility="Collapsed"/>
            <Grid Grid.Row="1" Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBox Grid.Row="0" Text="{Binding Page.NewPost, Mode=TwoWay}" TextWrapping="Wrap" AcceptsReturn="True" Height="140"/>
                <Grid Grid.Row="1" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0" HorizontalAlignment="Left">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Image Grid.Row="0" x:Name="AttachedImage"  HorizontalAlignment="Left"
                               Source="{Binding SelectedPhoto, Converter={StaticResource PhotoConverter}, Mode=OneWay}" Height="100" Width="100" 
                               Visibility="{Binding SelectedPhoto, Converter={StaticResource PhotoVisibiliyConverter}, Mode=OneWay}"
                               Margin="5"/>
                        <Button Grid.Row="1" Content="Attach Image" Command="{Binding AttachImageCommand}" Margin="5"/>
                    </Grid>
                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Content="New Post (Published)" Command="{Binding PublishCommand}" Margin="5" IsEnabled="{Binding Page.PostActionEnabled, Mode=OneWay}"/>
                        <Button Content="New Post (Not published)" Command="{Binding NoPublishCommand}" Margin="5" IsEnabled="{Binding Page.PostActionEnabled, Mode=OneWay}"/>
                        <Button Content="Schedule Post" IsEnabled="{Binding Page.PostActionEnabled, Mode=OneWay}" Margin="5">
                            <Button.Flyout>
                                <Flyout Placement="Bottom">
                                    <Grid Width="300">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <my:RadDatePicker Grid.Column="0" Value="{Binding ScheduledDate, Mode=TwoWay}"  DisplayValueFormat="d-MMM-yyyy" Margin="0,0,5,0"/>
                                        <my:RadTimePicker Grid.Column="1" Value="{Binding ScheduledTime, Mode=TwoWay}"  DisplayValueFormat="hh:mm" />
                                        <Button Grid.Row="1"  Content="Schedule" Command="{Binding SchedulePostCommand}" />
                                    </Grid>

                                </Flyout>
                            </Button.Flyout>
                        </Button>
                    </StackPanel>
                </Grid>
            </Grid>
            <Grid Grid.Row="2" Margin="5">
                <ProgressRing IsActive="{Binding Page.IsProcessing, Mode=TwoWay}"/>
                <ListView
                x:Name="PostList"
                ItemsSource="{Binding Page.Posts}"
                ItemTemplate="{StaticResource PostItemTemplate}">
                    <ListView.Header>
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontWeight" Value="Bold"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="25"/>
                                <ColumnDefinition Width="200"/>
                                <ColumnDefinition Width="25"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Published" TextWrapping="WrapWholeWords" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5"/>
                            <TextBlock Grid.Column="1" Text="Post" TextWrapping="WrapWholeWords" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5"/>
                            <TextBlock Grid.Column="2" Text="Impressions" TextWrapping="WrapWholeWords" VerticalAlignment="Top" HorizontalAlignment="Right"/>
                            <TextBlock Grid.Column="3" Text="Unique Users" TextWrapping="WrapWholeWords" VerticalAlignment="Top" HorizontalAlignment="Right"/>
                            <TextBlock Grid.Column="5" Text="Actions" TextWrapping="WrapWholeWords" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                        </Grid>

                    </ListView.Header>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Grid>
        </Grid>
        <!--  Adaptive triggers  -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="640"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="TitlePage.Margin" Value="48,0,12,7"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>

    
